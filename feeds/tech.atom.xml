<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Duang一下</title><link href="https://harry2chen.github.io/" rel="alternate"></link><link href="https://harry2chen.github.io/feeds/tech.atom.xml" rel="self"></link><id>https://harry2chen.github.io/</id><updated>2017-01-07T12:45:00+08:00</updated><entry><title>My sensational title</title><link href="https://harry2chen.github.io/posts/2017/%201/07/ex3/" rel="alternate"></link><published>2017-01-07T12:45:00+08:00</published><updated>2017-01-07T12:45:00+08:00</updated><author><name>Harry Chen</name></author><id>tag:harry2chen.github.io,2017-01-07:posts/2017/ 1/07/ex3/</id><summary type="html">&lt;p&gt;This is the content of my super blog post on 2017, 01, 07.&lt;/p&gt;</summary><category term="fun"></category><category term="中文"></category></entry><entry><title>My sensational title</title><link href="https://harry2chen.github.io/posts/2017/%201/06/ex2/" rel="alternate"></link><published>2017-01-06T12:11:00+08:00</published><updated>2017-01-06T12:11:00+08:00</updated><author><name>Harry Chen</name></author><id>tag:harry2chen.github.io,2017-01-06:posts/2017/ 1/06/ex2/</id><summary type="html">&lt;p&gt;This is the content of my super blog post on 2017.&lt;/p&gt;</summary><category term="fun"></category></entry><entry><title>Git 学习summary</title><link href="https://harry2chen.github.io/posts/2016/12/04/my-super-post/" rel="alternate"></link><published>2016-12-04T22:06:00+08:00</published><updated>2016-12-04T22:06:00+08:00</updated><author><name>Harry Chen</name></author><id>tag:harry2chen.github.io,2016-12-04:posts/2016/12/04/my-super-post/</id><summary type="html">&lt;h1&gt;Git 学习summary&lt;/h1&gt;
&lt;h3&gt;添加文件放入repo&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ git add readme.txt            // 加入到暂存区&lt;span class="p"&gt;;&lt;/span&gt;
$ git add -A                // stags All,both &lt;span class="o"&gt;[&lt;/span&gt;git add . &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; git add -u&lt;span class="o"&gt;]&lt;/span&gt;
$ git add .                 // stags new and modified, **without deleted**
$ git add -u                // stags modified and deleted, without new
$ git commit -m &lt;span class="s2"&gt;&amp;quot;write a readme file&amp;quot;&lt;/span&gt;       //提交到版本库
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;初始化 Git repo.&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ git init
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;查看工作状态&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ git status
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;查看修改内容&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ git diff readme.txt
$ git diff HEAD -- readme.txt   // 比较工作区和版本库里最新版本的区别
                                // HEAD: 当前版本
                                // HEAD^ : 上一个版本 依此类推
                                // HEAD~100 : 上100个版本
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;重载之前的历史版本（返回指定的版本）&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ git reset --hard commit_id
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;查看提交历史&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ git log --graph --pretty&lt;span class="o"&gt;=&lt;/span&gt;oneline --abbrev-commit
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;查看历史命令，以便确定要回到未来的哪个版本&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ git reflog
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;直接丢弃工作区的修改&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ git checkout -- readme.txt    // 1. file not add to stage,撤销修改回到和版本库&amp;lt;HEAD&amp;gt;一样的状态
                                // 2. file add to stage,撤销修改回到添加到暂存区后的状态
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;改乱了工作区的某个文件&amp;amp;添加到暂存区，想丢弃修改&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ git reset HEAD readme.txt
$ git checkout -- readme.txt
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;撤销本次提交 （commit）&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;参考 版本回退
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;从版本库删除指定文件 from lastest commit&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ git rm test.txt
$ git commit -m &lt;span class="s2"&gt;&amp;quot;remove test.txt&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;关联一个远程库&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ git remote add origin git@github.com:harry2chen/blog.git
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;关联后，第一次推送&lt;push&gt; master 分支&lt;branch&gt;&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ git push -u origin master
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;此后，每次提交&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ git push origin master
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;从远程库clone到本地&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ git clone git@github.com:harry2chen/blog.git    // address, also can use https:// protocol
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;查看分支&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ git branch
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;创建分支&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ git branch &amp;lt;branch_name&amp;gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;切换分支&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ git checkout &amp;lt;branch_name&amp;gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;创建 ＋ 切换分支&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ git checkout -b &amp;lt;branch_name&amp;gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;合并某分支 到 当前分支［fast forward模式，删除分支后，丢失分支信息］&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ git merge &amp;lt;branch_name&amp;gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;删除分支&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ git branch -d &amp;lt;branch_name&amp;gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;合并分支，禁用fast forward&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ git merge --no-ff -m &lt;span class="s2"&gt;&amp;quot;merge with no-ff&amp;quot;&lt;/span&gt; dev
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;把工作现场“储藏”起来&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ git stash
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;把之前的工作现场（stach）恢复回来&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ git stash pop
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;查看stash内容&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ git stash list
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;丢弃一个没有被合并过的branch&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ git branch -D &amp;lt;branch_name&amp;gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;查看远程库的信息&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ git remote -v
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;从本地推送分支&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ git push origin &amp;lt;branch_name&amp;gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;如果推送失败&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ git pull      // 抓取远程新的提交
// 失败： 提示“no tracking infomation”
$ git branch --set-upstream &amp;lt;branch_name&amp;gt; origin/&amp;lt;branch_name&amp;gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;在本地创建和远程对应的分支&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ git checkout -b &amp;lt;branch_name&amp;gt; origin/&amp;lt;branch_name&amp;gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;首先切换到需要打标签的分支上，再打tags&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ git branch    // 查看分支
$ git checkout master       // 切换到master
$ git tag &amp;lt;tag_name&amp;gt;        // 打上标签
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;对指定的提交打tags&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ git tag &amp;lt;tag_name&amp;gt; &amp;lt;commit_id&amp;gt;
// create tag with comment
$ git tag -a &amp;lt;tag_name&amp;gt; -m &lt;span class="s2"&gt;&amp;quot;comments&amp;quot;&lt;/span&gt; &amp;lt;commit_id&amp;gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;查看所有标签&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ git tag
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;查看标签信息&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ git show &amp;lt;tag_name&amp;gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;删除tag&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ git tag -d &amp;lt;tag_name&amp;gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;推送某个标签到远程&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ git push origin &amp;lt;tag_name&amp;gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;一次性推送 尚未推送到远程的 tags&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ git push origin --tags
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;如果tag已经推送到远程，要删除该标签&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ git tag -d &amp;lt;tag_name&amp;gt;         // 先在本地端删除
$ git push origin :refs/tags/&amp;lt;tag_name&amp;gt;     // 远程端删除
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;配置别名&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ git config --global alias.unstage &lt;span class="s1"&gt;&amp;#39;reset HEAD&amp;#39;&lt;/span&gt;  // 将 reset HEAD 映射到 unstage
$ git unstage test.py   // 实际上执行：$ git reset HEAD test.py
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;other&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;* 忽略某些文件，在Git工作区的根目录下创建 .gitignore文件
* git配置文件放在.git/config 文件中
&lt;/pre&gt;&lt;/div&gt;</summary><category term="git"></category><category term="中文"></category></entry><entry><title>My sensational title</title><link href="https://harry2chen.github.io/posts/2016/11/28/my-super-post1/" rel="alternate"></link><published>2016-11-28T22:06:00+08:00</published><updated>2016-11-28T22:06:00+08:00</updated><author><name>Harry Chen</name></author><id>tag:harry2chen.github.io,2016-11-28:posts/2016/11/28/my-super-post1/</id><summary type="html">&lt;p&gt;This is the content of my super blog post.&lt;/p&gt;</summary><category term="fun"></category><category term="中文"></category></entry></feed>